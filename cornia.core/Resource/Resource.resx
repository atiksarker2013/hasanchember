<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BrandCodeFluentValidation" xml:space="preserve">
    <value>Brand  code cannot be blank.</value>
  </data>
  <data name="BrandNameFluentValidation" xml:space="preserve">
    <value>Brand  Name cannot be blank.</value>
  </data>
  <data name="BrandSortFluentValidation" xml:space="preserve">
    <value>Brand  Sort cannot be blank.</value>
  </data>
  <data name="ChooseYourLanguage" xml:space="preserve">
    <value>Choose Your Language</value>
  </data>
  <data name="ColorCodeFluentValidation" xml:space="preserve">
    <value>Color code cannot be blank.</value>
  </data>
  <data name="ColorNameFluentValidation" xml:space="preserve">
    <value>Color Name cannot be blank.</value>
  </data>
  <data name="ColorSortFluentValidation" xml:space="preserve">
    <value>Color Sort cannot be blank.</value>
  </data>
  <data name="ComplianceCertificateCodeFluentValidation" xml:space="preserve">
    <value>Complaiance certificate Code cannot be blank.</value>
  </data>
  <data name="ComplianceCertificateNameFluentValidation" xml:space="preserve">
    <value>Complaince certificate name cannot be blank.</value>
  </data>
  <data name="ComplianceCertificateSortFluentValidation" xml:space="preserve">
    <value>Complaince certificate sort cannot be blank.</value>
  </data>
  <data name="ContentCodeFluentValidation" xml:space="preserve">
    <value>Content Code cannot be blank.</value>
  </data>
  <data name="ContentNameFluentValidation" xml:space="preserve">
    <value>Content  name cannot be blank.</value>
  </data>
  <data name="ContentSortFluentValidation" xml:space="preserve">
    <value>Content  sort cannot be blank.</value>
  </data>
  <data name="CurrencyNameFluentValidation" xml:space="preserve">
    <value>Currency Name cannot be blank</value>
  </data>
  <data name="CurrencySortFluentValidation" xml:space="preserve">
    <value>Currency Sort cannot be blank.</value>
  </data>
  <data name="CustomerCodeFluentValidation" xml:space="preserve">
    <value>Customer code cannot be blank</value>
  </data>
  <data name="CustomerCurrencyRefFluentValidation" xml:space="preserve">
    <value>Customer currency cannot be blank</value>
  </data>
  <data name="CustomerNameFluentValidation" xml:space="preserve">
    <value>Customer Name cannot be blank</value>
  </data>
  <data name="CustomerSortFluentValidation" xml:space="preserve">
    <value>Customer Sort cannot be blank.</value>
  </data>
  <data name="EmployeeEmployeeTypeFluentValidation" xml:space="preserve">
    <value>Employee type cannot be blank</value>
  </data>
  <data name="EmployeeNameFluentValidation" xml:space="preserve">
    <value>Employee Name cannot be blank</value>
  </data>
  <data name="EmployeeSortFluentValidation" xml:space="preserve">
    <value>Employee sort cannot be blank</value>
  </data>
  <data name="EmployeeTypeNameFluentValidation" xml:space="preserve">
    <value>Employee type Name cannot be blank</value>
  </data>
  <data name="EmployeeTypeSortFluentValidation" xml:space="preserve">
    <value>Employee type Sort cannot be blank.</value>
  </data>
  <data name="FactoryCodeFluentValidation" xml:space="preserve">
    <value>Factory code cannot be blank.</value>
  </data>
  <data name="FactoryNameFluentValidation" xml:space="preserve">
    <value>Factory name cannot be blank.</value>
  </data>
  <data name="FactorySortFluentValidation" xml:space="preserve">
    <value>Factory sort cannot be blank.</value>
  </data>
  <data name="GenderCodeFluentValidation" xml:space="preserve">
    <value>Gender  code cannot be blank</value>
  </data>
  <data name="GenderNameFluentValidation" xml:space="preserve">
    <value>Gender  Name cannot be blank.</value>
  </data>
  <data name="GenderSortFluentValidation" xml:space="preserve">
    <value>Gender sort cannot be blank.</value>
  </data>
  <data name="GroupCompanyNameFluentValidation" xml:space="preserve">
    <value>Name cannot be blank</value>
  </data>
  <data name="GroupCompanyUITitle" xml:space="preserve">
    <value>Group Company</value>
  </data>
  <data name="InvalidPIN" xml:space="preserve">
    <value>Invalid PIN Number.</value>
  </data>
  <data name="MaterialTypeNameFluentValidation" xml:space="preserve">
    <value>Material type Name cannot be blank</value>
  </data>
  <data name="MaterialTypeSortFluentValidation" xml:space="preserve">
    <value>Material type sort cannot be blank.</value>
  </data>
  <data name="MeasurementTypeAbbreviationFluentValidation" xml:space="preserve">
    <value>Measurement type Abbreviation cannot be blank</value>
  </data>
  <data name="MeasurementTypeNameFluentValidation" xml:space="preserve">
    <value>Measurement type Name cannot be blank</value>
  </data>
  <data name="MeasurementTypeSortFluentValidation" xml:space="preserve">
    <value>Measurement type sort cannot be blank.</value>
  </data>
  <data name="MessageTypeCodeFluentValidation" xml:space="preserve">
    <value>Message type code cannot be blank</value>
  </data>
  <data name="MessageTypeNameEmpty" xml:space="preserve">
    <value>Message type Name cannot be blank. </value>
  </data>
  <data name="MessageTypeNameFluentValidation" xml:space="preserve">
    <value>Message type Name cannot be blank</value>
  </data>
  <data name="MessageTypeSortFluentValidation" xml:space="preserve">
    <value>Message type sort cannot be blank.</value>
  </data>
  <data name="OrderStatusCodeFluentValidation" xml:space="preserve">
    <value>Order status Code cannot be blank.</value>
  </data>
  <data name="OrderStatusNameFluentValidation" xml:space="preserve">
    <value>Order status name cannot be blank.</value>
  </data>
  <data name="OrderStatusSortFluentValidation" xml:space="preserve">
    <value>Order status sort cannot be blank.</value>
  </data>
  <data name="OrderTypeCodeEmpty" xml:space="preserve">
    <value />
  </data>
  <data name="OrderTypeCodeFluentValidation" xml:space="preserve">
    <value>Order  type code cannot be blank.</value>
  </data>
  <data name="OrderTypeNameFluentValidation" xml:space="preserve">
    <value>Order type Name cannot be blank</value>
  </data>
  <data name="OrderTypeSortFluentValidation" xml:space="preserve">
    <value>Order type sort cannot be blank.</value>
  </data>
  <data name="PackingTypeCodeFluentValidation" xml:space="preserve">
    <value>Packing type code cannot be blank.</value>
  </data>
  <data name="PackingTypeNameFluentValidation" xml:space="preserve">
    <value>Packing type Name cannot be blank.</value>
  </data>
  <data name="PackingTypeSortFluentValidation" xml:space="preserve">
    <value>Packing type sort cannot be blank.</value>
  </data>
  <data name="PaymentTypeNameFluentValidation" xml:space="preserve">
    <value>Payment type Name cannot be blank.</value>
  </data>
  <data name="PaymentTypeSortFluentValidation" xml:space="preserve">
    <value>Payment type Sort cannot be blank.</value>
  </data>
  <data name="PermissionNameFluentValidation" xml:space="preserve">
    <value>Permission Name can not be blank.</value>
  </data>
  <data name="PermissionSortFluentValidation" xml:space="preserve">
    <value>Permission sort can not be blank.</value>
  </data>
  <data name="PermissionTypeNameFluentValidation" xml:space="preserve">
    <value>Permission type Name cannot be blank.</value>
  </data>
  <data name="PermissionTypeSortFluentValidation" xml:space="preserve">
    <value> Permission type Sort cannot be blank.</value>
  </data>
  <data name="PersonNameFluentValidation" xml:space="preserve">
    <value>Person Name cannot be blank.</value>
  </data>
  <data name="PersonSortFluentValidation" xml:space="preserve">
    <value>Person Sort cannot be blank.</value>
  </data>
  <data name="PersonSurnameFluentValidation" xml:space="preserve">
    <value>Person Surname cannot be blank.</value>
  </data>
  <data name="PersonTitleFluentValidation" xml:space="preserve">
    <value>Person Title cannot be blank.</value>
  </data>
  <data name="PersonTypeCodeFluentValidation" xml:space="preserve">
    <value>Person type code cannot be blank.</value>
  </data>
  <data name="PersonTypeFluentValidation" xml:space="preserve">
    <value>Person type cannot be blank.</value>
  </data>
  <data name="PersonTypeNameFluentValidation" xml:space="preserve">
    <value>Person type name cannot be blank.</value>
  </data>
  <data name="PersonTypeSortFluentValidation" xml:space="preserve">
    <value>Person type sort cannot be blank.</value>
  </data>
  <data name="PictureTypeCodeFluentValidation" xml:space="preserve">
    <value>Picture type code cannot be blank.</value>
  </data>
  <data name="PictureTypeNameFluentValidation" xml:space="preserve">
    <value>Picture type Name cannot be blank.</value>
  </data>
  <data name="PictureTypeSortFluentValidation" xml:space="preserve">
    <value>Picture type sort cannot be blank.</value>
  </data>
  <data name="ProductionPlanTypeCodeFluentValidation" xml:space="preserve">
    <value>Production plan type code cannot be blank.</value>
  </data>
  <data name="ProductionPlanTypeNameFluentValidation" xml:space="preserve">
    <value>Production plan type Name cannot be blank.</value>
  </data>
  <data name="ProductionPlanTypeSortFluentValidation" xml:space="preserve">
    <value>Production plan type sort cannot be blank.</value>
  </data>
  <data name="ProductionProcessAlertDayFluentValidation" xml:space="preserve">
    <value>Production process alert day cannot be blank.</value>
  </data>
  <data name="ProductionProcessCodeFluentValidation" xml:space="preserve">
    <value>Production process Code cannot be blank.</value>
  </data>
  <data name="ProductionProcessGroupNameFluentValidation" xml:space="preserve">
    <value>Production process group Name cannot be blank.</value>
  </data>
  <data name="ProductionProcessGroupSortFluentValidation" xml:space="preserve">
    <value>Production process group sort cannot be blank.</value>
  </data>
  <data name="ProductionProcessNameFluentValidation" xml:space="preserve">
    <value>Production process name cannot be blank.</value>
  </data>
  <data name="ProductionProcessSortFluentValidation" xml:space="preserve">
    <value>Production process sort cannot be blank.</value>
  </data>
  <data name="ProductionProcessWarningDayFluentValidation" xml:space="preserve">
    <value>Production process Warning day cannot be blank.</value>
  </data>
  <data name="ProductionTypeNameFluentValidation" xml:space="preserve">
    <value>Production type Name cannot be blank.</value>
  </data>
  <data name="ProductionTypeSortFluentValidation" xml:space="preserve">
    <value>Production type sort cannot be blank.</value>
  </data>
  <data name="ResultCodeCodeEmpty" xml:space="preserve">
    <value>Code field empty</value>
  </data>
  <data name="ResultCodeConfirmPasswordEmpty" xml:space="preserve">
    <value>Confirm Password can not be empty.</value>
  </data>
  <data name="ResultCodeConfirmPINEmpty" xml:space="preserve">
    <value>Confirm PINE cannot be blank</value>
  </data>
  <data name="ResultCodeDataNotFound" xml:space="preserve">
    <value>There is no data.</value>
  </data>
  <data name="ResultCodeDuplicate" xml:space="preserve">
    <value>This item already exist.</value>
  </data>
  <data name="ResultCodeEmailAddressIsNull" xml:space="preserve">
    <value>Please enter your e-mail address.</value>
  </data>
  <data name="ResultCodeEmailOrPasswordEmpty" xml:space="preserve">
    <value>Please type your e-mail &amp; password</value>
  </data>
  <data name="ResultCodeInvalidEmail" xml:space="preserve">
    <value>E-mail address is not valid</value>
  </data>
  <data name="ResultCodeInvalidOldPassword" xml:space="preserve">
    <value>Old Password is invalid</value>
  </data>
  <data name="ResultCodeInvalidOldPIN" xml:space="preserve">
    <value>Old PIN is Invalid</value>
  </data>
  <data name="ResultCodeInvalidPassword" xml:space="preserve">
    <value>Password is not valid</value>
  </data>
  <data name="ResultCodeInvalidPasswordFormat" xml:space="preserve">
    <value>Invalid Password Format.</value>
  </data>
  <data name="ResultCodeInvalidPIN" xml:space="preserve">
    <value>Invalid PIN number</value>
  </data>
  <data name="ResultCodeInvalidPinFormat" xml:space="preserve">
    <value>Invalid PIN Format.</value>
  </data>
  <data name="ResultCodeMeasurementTypeAbbreviatinEmptyon" xml:space="preserve">
    <value>MEasurement type Abbreviatin cannot be blank.</value>
  </data>
  <data name="ResultCodeMeasurementTypeCodeEmpty" xml:space="preserve">
    <value>Measurement type code cannot be blank</value>
  </data>
  <data name="ResultCodeMeasurementTypeNameEmpty" xml:space="preserve">
    <value>MEasurement type Name cannot be blank</value>
  </data>
  <data name="ResultCodeMemberNotExist" xml:space="preserve">
    <value>Member not exist</value>
  </data>
  <data name="ResultCodeNameEmpty" xml:space="preserve">
    <value>Name field empty.</value>
  </data>
  <data name="ResultCodeNewAndConfirmPasswordMissmatch" xml:space="preserve">
    <value>New Password and Old Password doesn't match</value>
  </data>
  <data name="ResultCodeNewAndConfirmPINMissmatch" xml:space="preserve">
    <value>New PIN and Confirm PIN doesn't match</value>
  </data>
  <data name="ResultCodeNewPasswordEmpty" xml:space="preserve">
    <value>New Password can not be empty.</value>
  </data>
  <data name="ResultCodeNewPINEmpty" xml:space="preserve">
    <value>New PIN cannot be blank</value>
  </data>
  <data name="ResultCodeNoAddPermission" xml:space="preserve">
    <value>You do not have  add access.</value>
  </data>
  <data name="ResultCodeNoDeletePermission" xml:space="preserve">
    <value>You do not have Delete access.</value>
  </data>
  <data name="ResultCodeNoUpdatePermission" xml:space="preserve">
    <value>You do not have Update access.</value>
  </data>
  <data name="ResultCodeOldPasswordEmpty" xml:space="preserve">
    <value>Old Password can not be empty.</value>
  </data>
  <data name="ResultCodeOldPINEmpty" xml:space="preserve">
    <value>Current PIN cannot be blank</value>
  </data>
  <data name="ResultCodePasswordChangeSuccess" xml:space="preserve">
    <value>Your have successfully change your password.</value>
  </data>
  <data name="ResultCodePasswordEmpty" xml:space="preserve">
    <value>Password field empty.</value>
  </data>
  <data name="ResultCodePermissionIdAlreadyExist" xml:space="preserve">
    <value>Permission ID already exist.</value>
  </data>
  <data name="ResultCodePermissionNameAlreadyExist" xml:space="preserve">
    <value>Permission Name already exist.</value>
  </data>
  <data name="ResultCodePINChangeSuccess" xml:space="preserve">
    <value>You have successfully change your PIN.</value>
  </data>
  <data name="ResultCodePINEmpty" xml:space="preserve">
    <value>PIN can not be blank.</value>
  </data>
  <data name="ResultCodeSuccess" xml:space="preserve">
    <value>Success.</value>
  </data>
  <data name="ResultCodeUserExistUnderThisCustomer" xml:space="preserve">
    <value>User exist under this customer.</value>
  </data>
  <data name="ResultCodeUserExistUnderThisFactory" xml:space="preserve">
    <value>User exist under this Factory .</value>
  </data>
  <data name="ResultCodeUserExistUnderThisGroup" xml:space="preserve">
    <value>User exist under this group</value>
  </data>
  <data name="ResultCodeUserExistUnderThisPerson" xml:space="preserve">
    <value>User exist under this Person .</value>
  </data>
  <data name="ResultCodeUserTypePermissionExist" xml:space="preserve">
    <value>This User type permission already exist into this user type.</value>
  </data>
  <data name="SeasonCodeFluentValidation" xml:space="preserve">
    <value>Season Code cannot be blank.</value>
  </data>
  <data name="SeasonNameFluentValidation" xml:space="preserve">
    <value>Season Name cannot be blank.</value>
  </data>
  <data name="SeasonSortFluentValidation" xml:space="preserve">
    <value>Season sort cannot be blank.</value>
  </data>
  <data name="SeasonYearCodeFluentValidation" xml:space="preserve">
    <value>Season year Code cannot be blank.</value>
  </data>
  <data name="SeasonYearNameFluentValidation" xml:space="preserve">
    <value>Season year name cannot be blank.</value>
  </data>
  <data name="SeasonYearSortFluentValidation" xml:space="preserve">
    <value>Season year sort cannot be blank.</value>
  </data>
  <data name="Service_Result_Member_NotFound" xml:space="preserve">
    <value>Sample Value - EN</value>
  </data>
  <data name="SizeCodeFluentValidation" xml:space="preserve">
    <value>Size Code cannot be blank.</value>
  </data>
  <data name="SizeNameFluentValidation" xml:space="preserve">
    <value>Size  Name cannot be blank.</value>
  </data>
  <data name="SizeSortFluentValidation" xml:space="preserve">
    <value>Size sort cannot be blank.</value>
  </data>
  <data name="TitleCodeFluentValidation" xml:space="preserve">
    <value>Title code cannot be blank.</value>
  </data>
  <data name="TitleNameFluentValidation" xml:space="preserve">
    <value>Title name cannot be blank.</value>
  </data>
  <data name="TitleSortFluentValidation" xml:space="preserve">
    <value>Title sort cannot be blank.</value>
  </data>
  <data name="UserCodeFluentValidation" xml:space="preserve">
    <value>User code cannot be blank</value>
  </data>
  <data name="UserNameFluentValidation" xml:space="preserve">
    <value>User Name cannot be blank</value>
  </data>
  <data name="UserSortFluentValidation" xml:space="preserve">
    <value>User sort cannot be blank</value>
  </data>
  <data name="UserTypeNameFluentValidation" xml:space="preserve">
    <value>User type Name cannot be blank.</value>
  </data>
  <data name="UserTypePermissionNameFluentValidation" xml:space="preserve">
    <value>User type Permission Name cannot be blank.</value>
  </data>
  <data name="UserTypePermissionPermissionRefFluentValidation" xml:space="preserve">
    <value>User type Permission cannot be blank.</value>
  </data>
  <data name="UserTypePermissionSortFluentValidation" xml:space="preserve">
    <value>User type Permission Sort cannot be blank.</value>
  </data>
  <data name="UserTypePermissionUserTypeRefFluentValidation" xml:space="preserve">
    <value>User type Permission User type cannot be blank.</value>
  </data>
  <data name="UserTypeSortFluentValidation" xml:space="preserve">
    <value>User type Sort cannot be blank.</value>
  </data>
</root>